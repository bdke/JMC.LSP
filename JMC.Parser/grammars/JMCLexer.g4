lexer grammar JMCLexer;
SIMPLE_ADDICTIVE: '++' | '--' ;
MULTIPACATION: '*' | '/' | '%';
ADDICTIVE: '+' | '-';
COMPARATOR: '>' | '<' ;
COMPARASION: '==' | '!=' | '>=' | '<=';
ASSIGN: '=';
ASSIGN_OPERATORS: '%=' |'+=' | '-=' | '*=' | '/=' | '><' | '??=';
ARROW: '=>';
BLOCK_START: '{';
BLOCK_END: '}';
LIST_START: '[';
LIST_END: ']';
PAREN_START: '(' ;
PAREN_END: ')' ;
COLON: ':';
IMPLY: '::';
SELECTOR: '@' [parse] ;
RUN: 'run';
IMPORT: 'import';
FUNCTION: 'function';
WHILE: 'while';
IF: 'if';
ELSE: 'else';
NEW: 'new';
END: ';' ;
SEP: ',';
NOT: '!';
COMMENT: ('//' | '#') ~[\r\n]* [\r\n]+;
JSON_INT: INTEGER 'b'?;
INTEGER: [1-9][0-9]* | '0';
FLOAT: [0-9]+ '.' [0-9]+;
STRING: ('"' ~[\r\n"]* '"') | ('\'' ~[\r\n']* '\'');
BOOL: 'true' | 'false';
NULL: 'null';
WS: [ \t\r\n]+ -> skip;
VARIABLE_IDENTIFIER: '$' [a-zA-Z_.][a-zA-Z0-9_.]* ;
IDENTIFIER: [a-zA-Z_.][a-zA-Z0-9_.]*;