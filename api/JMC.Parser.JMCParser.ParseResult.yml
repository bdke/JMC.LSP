### YamlMime:ManagedReference
items:
- uid: JMC.Parser.JMCParser.ParseResult
  commentId: T:JMC.Parser.JMCParser.ParseResult
  id: JMCParser.ParseResult
  parent: JMC.Parser
  children:
  - JMC.Parser.JMCParser.ParseResult.#ctor(System.Collections.Generic.IEnumerable{sly.parser.ParseError},JMC.Parser.JMCExpression,JMC.Parser.JMCRuleInstance)
  - JMC.Parser.JMCParser.ParseResult.Errors
  - JMC.Parser.JMCParser.ParseResult.Instance
  - JMC.Parser.JMCParser.ParseResult.IsError
  - JMC.Parser.JMCParser.ParseResult.Root
  langs:
  - csharp
  - vb
  name: JMCParser.ParseResult
  nameWithType: JMCParser.ParseResult
  fullName: JMC.Parser.JMCParser.ParseResult
  type: Struct
  source:
    remote:
      path: JMC.Parser/JMCParser.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: ParseResult
    path: JMC.Parser/JMCParser.cs
    startLine: 87
  assemblies:
  - JMC.Parser
  namespace: JMC.Parser
  syntax:
    content: public readonly struct JMCParser.ParseResult
    content.vb: Public Structure JMCParser.ParseResult
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: JMC.Parser.JMCParser.ParseResult.#ctor(System.Collections.Generic.IEnumerable{sly.parser.ParseError},JMC.Parser.JMCExpression,JMC.Parser.JMCRuleInstance)
  commentId: M:JMC.Parser.JMCParser.ParseResult.#ctor(System.Collections.Generic.IEnumerable{sly.parser.ParseError},JMC.Parser.JMCExpression,JMC.Parser.JMCRuleInstance)
  id: '#ctor(System.Collections.Generic.IEnumerable{sly.parser.ParseError},JMC.Parser.JMCExpression,JMC.Parser.JMCRuleInstance)'
  parent: JMC.Parser.JMCParser.ParseResult
  langs:
  - csharp
  - vb
  name: ParseResult(IEnumerable<ParseError>, JMCExpression, JMCRuleInstance?)
  nameWithType: JMCParser.ParseResult.ParseResult(IEnumerable<ParseError>, JMCExpression, JMCRuleInstance?)
  fullName: JMC.Parser.JMCParser.ParseResult.ParseResult(System.Collections.Generic.IEnumerable<sly.parser.ParseError>, JMC.Parser.JMCExpression, JMC.Parser.JMCRuleInstance?)
  type: Constructor
  source:
    remote:
      path: JMC.Parser/JMCParser.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: .ctor
    path: JMC.Parser/JMCParser.cs
    startLine: 87
  assemblies:
  - JMC.Parser
  namespace: JMC.Parser
  syntax:
    content: public ParseResult(IEnumerable<ParseError> errors, JMCExpression root, JMCRuleInstance? instance)
    parameters:
    - id: errors
      type: System.Collections.Generic.IEnumerable{sly.parser.ParseError}
    - id: root
      type: JMC.Parser.JMCExpression
    - id: instance
      type: JMC.Parser.JMCRuleInstance
    content.vb: Public Sub New(errors As IEnumerable(Of ParseError), root As JMCExpression, instance As JMCRuleInstance)
  overload: JMC.Parser.JMCParser.ParseResult.#ctor*
  nameWithType.vb: JMCParser.ParseResult.New(IEnumerable(Of ParseError), JMCExpression, JMCRuleInstance)
  fullName.vb: JMC.Parser.JMCParser.ParseResult.New(System.Collections.Generic.IEnumerable(Of sly.parser.ParseError), JMC.Parser.JMCExpression, JMC.Parser.JMCRuleInstance)
  name.vb: New(IEnumerable(Of ParseError), JMCExpression, JMCRuleInstance)
- uid: JMC.Parser.JMCParser.ParseResult.Errors
  commentId: F:JMC.Parser.JMCParser.ParseResult.Errors
  id: Errors
  parent: JMC.Parser.JMCParser.ParseResult
  langs:
  - csharp
  - vb
  name: Errors
  nameWithType: JMCParser.ParseResult.Errors
  fullName: JMC.Parser.JMCParser.ParseResult.Errors
  type: Field
  source:
    remote:
      path: JMC.Parser/JMCParser.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: Errors
    path: JMC.Parser/JMCParser.cs
    startLine: 89
  assemblies:
  - JMC.Parser
  namespace: JMC.Parser
  syntax:
    content: public readonly ImmutableArray<ParseError> Errors
    return:
      type: System.Collections.Immutable.ImmutableArray{sly.parser.ParseError}
    content.vb: Public ReadOnly Errors As ImmutableArray(Of ParseError)
- uid: JMC.Parser.JMCParser.ParseResult.Root
  commentId: F:JMC.Parser.JMCParser.ParseResult.Root
  id: Root
  parent: JMC.Parser.JMCParser.ParseResult
  langs:
  - csharp
  - vb
  name: Root
  nameWithType: JMCParser.ParseResult.Root
  fullName: JMC.Parser.JMCParser.ParseResult.Root
  type: Field
  source:
    remote:
      path: JMC.Parser/JMCParser.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: Root
    path: JMC.Parser/JMCParser.cs
    startLine: 90
  assemblies:
  - JMC.Parser
  namespace: JMC.Parser
  syntax:
    content: public readonly JMCExpression Root
    return:
      type: JMC.Parser.JMCExpression
    content.vb: Public ReadOnly Root As JMCExpression
- uid: JMC.Parser.JMCParser.ParseResult.Instance
  commentId: F:JMC.Parser.JMCParser.ParseResult.Instance
  id: Instance
  parent: JMC.Parser.JMCParser.ParseResult
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: JMCParser.ParseResult.Instance
  fullName: JMC.Parser.JMCParser.ParseResult.Instance
  type: Field
  source:
    remote:
      path: JMC.Parser/JMCParser.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: Instance
    path: JMC.Parser/JMCParser.cs
    startLine: 91
  assemblies:
  - JMC.Parser
  namespace: JMC.Parser
  syntax:
    content: public readonly JMCRuleInstance? Instance
    return:
      type: JMC.Parser.JMCRuleInstance
    content.vb: Public ReadOnly Instance As JMCRuleInstance
- uid: JMC.Parser.JMCParser.ParseResult.IsError
  commentId: P:JMC.Parser.JMCParser.ParseResult.IsError
  id: IsError
  parent: JMC.Parser.JMCParser.ParseResult
  langs:
  - csharp
  - vb
  name: IsError
  nameWithType: JMCParser.ParseResult.IsError
  fullName: JMC.Parser.JMCParser.ParseResult.IsError
  type: Property
  source:
    remote:
      path: JMC.Parser/JMCParser.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: IsError
    path: JMC.Parser/JMCParser.cs
    startLine: 93
  assemblies:
  - JMC.Parser
  namespace: JMC.Parser
  syntax:
    content: public bool IsError { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsError As Boolean
  overload: JMC.Parser.JMCParser.ParseResult.IsError*
references:
- uid: JMC.Parser
  commentId: N:JMC.Parser
  href: JMC.html
  name: JMC.Parser
  nameWithType: JMC.Parser
  fullName: JMC.Parser
  spec.csharp:
  - uid: JMC
    name: JMC
    href: JMC.html
  - name: .
  - uid: JMC.Parser
    name: Parser
    href: JMC.Parser.html
  spec.vb:
  - uid: JMC
    name: JMC
    href: JMC.html
  - name: .
  - uid: JMC.Parser
    name: Parser
    href: JMC.Parser.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: JMC.Parser.JMCParser.ParseResult.#ctor*
  commentId: Overload:JMC.Parser.JMCParser.ParseResult.#ctor
  href: JMC.Parser.JMCParser.ParseResult.html#JMC_Parser_JMCParser_ParseResult__ctor_System_Collections_Generic_IEnumerable_sly_parser_ParseError__JMC_Parser_JMCExpression_JMC_Parser_JMCRuleInstance_
  name: ParseResult
  nameWithType: JMCParser.ParseResult.ParseResult
  fullName: JMC.Parser.JMCParser.ParseResult.ParseResult
  nameWithType.vb: JMCParser.ParseResult.New
  fullName.vb: JMC.Parser.JMCParser.ParseResult.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{sly.parser.ParseError}
  commentId: T:System.Collections.Generic.IEnumerable{sly.parser.ParseError}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ParseError>
  nameWithType: IEnumerable<ParseError>
  fullName: System.Collections.Generic.IEnumerable<sly.parser.ParseError>
  nameWithType.vb: IEnumerable(Of ParseError)
  fullName.vb: System.Collections.Generic.IEnumerable(Of sly.parser.ParseError)
  name.vb: IEnumerable(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: sly.parser.ParseError
    name: ParseError
    isExternal: true
    href: https://github.com/b3b00/csly/blob/57b0f21af72f17d5e7cc16844c8d01697fc31a7c/src/sly/parser/parser/ParseError.cs
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: sly.parser.ParseError
    name: ParseError
    isExternal: true
    href: https://github.com/b3b00/csly/blob/57b0f21af72f17d5e7cc16844c8d01697fc31a7c/src/sly/parser/parser/ParseError.cs
  - name: )
- uid: JMC.Parser.JMCExpression
  commentId: T:JMC.Parser.JMCExpression
  parent: JMC.Parser
  href: JMC.Parser.JMCExpression.html
  name: JMCExpression
  nameWithType: JMCExpression
  fullName: JMC.Parser.JMCExpression
- uid: JMC.Parser.JMCRuleInstance
  commentId: T:JMC.Parser.JMCRuleInstance
  parent: JMC.Parser
  href: JMC.Parser.JMCRuleInstance.html
  name: JMCRuleInstance
  nameWithType: JMCRuleInstance
  fullName: JMC.Parser.JMCRuleInstance
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Immutable.ImmutableArray{sly.parser.ParseError}
  commentId: T:System.Collections.Immutable.ImmutableArray{sly.parser.ParseError}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<ParseError>
  nameWithType: ImmutableArray<ParseError>
  fullName: System.Collections.Immutable.ImmutableArray<sly.parser.ParseError>
  nameWithType.vb: ImmutableArray(Of ParseError)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of sly.parser.ParseError)
  name.vb: ImmutableArray(Of ParseError)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - uid: sly.parser.ParseError
    name: ParseError
    isExternal: true
    href: https://github.com/b3b00/csly/blob/57b0f21af72f17d5e7cc16844c8d01697fc31a7c/src/sly/parser/parser/ParseError.cs
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - uid: sly.parser.ParseError
    name: ParseError
    isExternal: true
    href: https://github.com/b3b00/csly/blob/57b0f21af72f17d5e7cc16844c8d01697fc31a7c/src/sly/parser/parser/ParseError.cs
  - name: )
- uid: System.Collections.Immutable.ImmutableArray`1
  commentId: T:System.Collections.Immutable.ImmutableArray`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  name: ImmutableArray<T>
  nameWithType: ImmutableArray<T>
  fullName: System.Collections.Immutable.ImmutableArray<T>
  nameWithType.vb: ImmutableArray(Of T)
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  name.vb: ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable.immutablearray-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Immutable
  commentId: N:System.Collections.Immutable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Immutable
  nameWithType: System.Collections.Immutable
  fullName: System.Collections.Immutable
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Immutable
    name: Immutable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.immutable
- uid: JMC.Parser.JMCParser.ParseResult.IsError*
  commentId: Overload:JMC.Parser.JMCParser.ParseResult.IsError
  href: JMC.Parser.JMCParser.ParseResult.html#JMC_Parser_JMCParser_ParseResult_IsError
  name: IsError
  nameWithType: JMCParser.ParseResult.IsError
  fullName: JMC.Parser.JMCParser.ParseResult.IsError
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
