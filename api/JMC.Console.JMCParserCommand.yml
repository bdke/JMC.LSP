### YamlMime:ManagedReference
items:
- uid: JMC.Console.JMCParserCommand
  commentId: T:JMC.Console.JMCParserCommand
  id: JMCParserCommand
  parent: JMC.Console
  children:
  - JMC.Console.JMCParserCommand.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  - JMC.Console.JMCParserCommand.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  langs:
  - csharp
  - vb
  name: JMCParserCommand
  nameWithType: JMCParserCommand
  fullName: JMC.Console.JMCParserCommand
  type: Class
  source:
    remote:
      path: JMC.Console/JMCParserCommand.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: JMCParserCommand
    path: JMC.Console/JMCParserCommand.cs
    startLine: 10
  assemblies:
  - JMC.Console
  namespace: JMC.Console
  syntax:
    content: 'public sealed class JMCParserCommand : AsyncCommand<JMCParserCommand.Settings>, ICommand<JMCParserCommand.Settings>, ICommandLimiter<JMCParserCommand.Settings>, ICommand'
    content.vb: Public NotInheritable Class JMCParserCommand Inherits AsyncCommand(Of JMCParserCommand.Settings) Implements ICommand(Of JMCParserCommand.Settings), ICommandLimiter(Of JMCParserCommand.Settings), ICommand
  inheritance:
  - System.Object
  - Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}
  implements:
  - Spectre.Console.Cli.ICommand{JMC.Console.JMCParserCommand.Settings}
  - Spectre.Console.Cli.ICommandLimiter{JMC.Console.JMCParserCommand.Settings}
  - Spectre.Console.Cli.ICommand
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: JMC.Console.JMCParserCommand.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  commentId: M:JMC.Console.JMCParserCommand.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  id: Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  parent: JMC.Console.JMCParserCommand
  langs:
  - csharp
  - vb
  name: Validate(CommandContext, Settings)
  nameWithType: JMCParserCommand.Validate(CommandContext, JMCParserCommand.Settings)
  fullName: JMC.Console.JMCParserCommand.Validate(Spectre.Console.Cli.CommandContext, JMC.Console.JMCParserCommand.Settings)
  type: Method
  source:
    remote:
      path: JMC.Console/JMCParserCommand.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: Validate
    path: JMC.Console/JMCParserCommand.cs
    startLine: 18
  assemblies:
  - JMC.Console
  namespace: JMC.Console
  summary: Validates the specified settings and remaining arguments.
  example: []
  syntax:
    content: public override ValidationResult Validate(CommandContext context, JMCParserCommand.Settings settings)
    parameters:
    - id: context
      type: Spectre.Console.Cli.CommandContext
      description: The command context.
    - id: settings
      type: JMC.Console.JMCParserCommand.Settings
      description: The settings.
    return:
      type: Spectre.Console.ValidationResult
      description: The validation result.
    content.vb: Public Overrides Function Validate(context As CommandContext, settings As JMCParserCommand.Settings) As ValidationResult
  overridden: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  overload: JMC.Console.JMCParserCommand.Validate*
- uid: JMC.Console.JMCParserCommand.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  commentId: M:JMC.Console.JMCParserCommand.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  id: ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  parent: JMC.Console.JMCParserCommand
  langs:
  - csharp
  - vb
  name: ExecuteAsync(CommandContext, Settings)
  nameWithType: JMCParserCommand.ExecuteAsync(CommandContext, JMCParserCommand.Settings)
  fullName: JMC.Console.JMCParserCommand.ExecuteAsync(Spectre.Console.Cli.CommandContext, JMC.Console.JMCParserCommand.Settings)
  type: Method
  source:
    remote:
      path: JMC.Console/JMCParserCommand.cs
      branch: master
      repo: https://github.com/bdke/csjmc.git
    id: ExecuteAsync
    path: JMC.Console/JMCParserCommand.cs
    startLine: 25
  assemblies:
  - JMC.Console
  namespace: JMC.Console
  summary: Executes the command.
  example: []
  syntax:
    content: public override Task<int> ExecuteAsync(CommandContext context, JMCParserCommand.Settings settings)
    parameters:
    - id: context
      type: Spectre.Console.Cli.CommandContext
      description: The command context.
    - id: settings
      type: JMC.Console.JMCParserCommand.Settings
      description: The settings.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: An integer indicating whether or not the command executed successfully.
    content.vb: Public Overrides Function ExecuteAsync(context As CommandContext, settings As JMCParserCommand.Settings) As Task(Of Integer)
  overridden: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  overload: JMC.Console.JMCParserCommand.ExecuteAsync*
references:
- uid: JMC.Console
  commentId: N:JMC.Console
  href: JMC.html
  name: JMC.Console
  nameWithType: JMC.Console
  fullName: JMC.Console
  spec.csharp:
  - uid: JMC
    name: JMC
    href: JMC.html
  - name: .
  - uid: JMC.Console
    name: Console
    href: JMC.Console.html
  spec.vb:
  - uid: JMC
    name: JMC
    href: JMC.html
  - name: .
  - uid: JMC.Console
    name: Console
    href: JMC.Console.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}
  commentId: T:Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}
  parent: Spectre.Console.Cli
  definition: Spectre.Console.Cli.AsyncCommand`1
  href: JMC.Console.JMCParserCommand.html
  name: AsyncCommand<JMCParserCommand.Settings>
  nameWithType: AsyncCommand<JMCParserCommand.Settings>
  fullName: Spectre.Console.Cli.AsyncCommand<JMC.Console.JMCParserCommand.Settings>
  nameWithType.vb: AsyncCommand(Of JMCParserCommand.Settings)
  fullName.vb: Spectre.Console.Cli.AsyncCommand(Of JMC.Console.JMCParserCommand.Settings)
  name.vb: AsyncCommand(Of JMCParserCommand.Settings)
  spec.csharp:
  - uid: Spectre.Console.Cli.AsyncCommand`1
    name: AsyncCommand
    isExternal: true
  - name: <
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: '>'
  spec.vb:
  - uid: Spectre.Console.Cli.AsyncCommand`1
    name: AsyncCommand
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: )
- uid: Spectre.Console.Cli.ICommand{JMC.Console.JMCParserCommand.Settings}
  commentId: T:Spectre.Console.Cli.ICommand{JMC.Console.JMCParserCommand.Settings}
  parent: Spectre.Console.Cli
  definition: Spectre.Console.Cli.ICommand`1
  href: JMC.Console.JMCParserCommand.html
  name: ICommand<JMCParserCommand.Settings>
  nameWithType: ICommand<JMCParserCommand.Settings>
  fullName: Spectre.Console.Cli.ICommand<JMC.Console.JMCParserCommand.Settings>
  nameWithType.vb: ICommand(Of JMCParserCommand.Settings)
  fullName.vb: Spectre.Console.Cli.ICommand(Of JMC.Console.JMCParserCommand.Settings)
  name.vb: ICommand(Of JMCParserCommand.Settings)
  spec.csharp:
  - uid: Spectre.Console.Cli.ICommand`1
    name: ICommand
    isExternal: true
  - name: <
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: '>'
  spec.vb:
  - uid: Spectre.Console.Cli.ICommand`1
    name: ICommand
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: )
- uid: Spectre.Console.Cli.ICommandLimiter{JMC.Console.JMCParserCommand.Settings}
  commentId: T:Spectre.Console.Cli.ICommandLimiter{JMC.Console.JMCParserCommand.Settings}
  parent: Spectre.Console.Cli
  definition: Spectre.Console.Cli.ICommandLimiter`1
  href: JMC.Console.JMCParserCommand.html
  name: ICommandLimiter<JMCParserCommand.Settings>
  nameWithType: ICommandLimiter<JMCParserCommand.Settings>
  fullName: Spectre.Console.Cli.ICommandLimiter<JMC.Console.JMCParserCommand.Settings>
  nameWithType.vb: ICommandLimiter(Of JMCParserCommand.Settings)
  fullName.vb: Spectre.Console.Cli.ICommandLimiter(Of JMC.Console.JMCParserCommand.Settings)
  name.vb: ICommandLimiter(Of JMCParserCommand.Settings)
  spec.csharp:
  - uid: Spectre.Console.Cli.ICommandLimiter`1
    name: ICommandLimiter
    isExternal: true
  - name: <
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: '>'
  spec.vb:
  - uid: Spectre.Console.Cli.ICommandLimiter`1
    name: ICommandLimiter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: )
- uid: Spectre.Console.Cli.ICommand
  commentId: T:Spectre.Console.Cli.ICommand
  parent: Spectre.Console.Cli
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: Spectre.Console.Cli.ICommand
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Spectre.Console.Cli.AsyncCommand`1
  commentId: T:Spectre.Console.Cli.AsyncCommand`1
  isExternal: true
  name: AsyncCommand<TSettings>
  nameWithType: AsyncCommand<TSettings>
  fullName: Spectre.Console.Cli.AsyncCommand<TSettings>
  nameWithType.vb: AsyncCommand(Of TSettings)
  fullName.vb: Spectre.Console.Cli.AsyncCommand(Of TSettings)
  name.vb: AsyncCommand(Of TSettings)
  spec.csharp:
  - uid: Spectre.Console.Cli.AsyncCommand`1
    name: AsyncCommand
    isExternal: true
  - name: <
  - name: TSettings
  - name: '>'
  spec.vb:
  - uid: Spectre.Console.Cli.AsyncCommand`1
    name: AsyncCommand
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSettings
  - name: )
- uid: Spectre.Console.Cli
  commentId: N:Spectre.Console.Cli
  isExternal: true
  name: Spectre.Console.Cli
  nameWithType: Spectre.Console.Cli
  fullName: Spectre.Console.Cli
  spec.csharp:
  - uid: Spectre
    name: Spectre
    isExternal: true
  - name: .
  - uid: Spectre.Console
    name: Console
    isExternal: true
  - name: .
  - uid: Spectre.Console.Cli
    name: Cli
    isExternal: true
  spec.vb:
  - uid: Spectre
    name: Spectre
    isExternal: true
  - name: .
  - uid: Spectre.Console
    name: Console
    isExternal: true
  - name: .
  - uid: Spectre.Console.Cli
    name: Cli
    isExternal: true
- uid: Spectre.Console.Cli.ICommand`1
  commentId: T:Spectre.Console.Cli.ICommand`1
  isExternal: true
  name: ICommand<TSettings>
  nameWithType: ICommand<TSettings>
  fullName: Spectre.Console.Cli.ICommand<TSettings>
  nameWithType.vb: ICommand(Of TSettings)
  fullName.vb: Spectre.Console.Cli.ICommand(Of TSettings)
  name.vb: ICommand(Of TSettings)
  spec.csharp:
  - uid: Spectre.Console.Cli.ICommand`1
    name: ICommand
    isExternal: true
  - name: <
  - name: TSettings
  - name: '>'
  spec.vb:
  - uid: Spectre.Console.Cli.ICommand`1
    name: ICommand
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSettings
  - name: )
- uid: Spectre.Console.Cli.ICommandLimiter`1
  commentId: T:Spectre.Console.Cli.ICommandLimiter`1
  isExternal: true
  name: ICommandLimiter<TSettings>
  nameWithType: ICommandLimiter<TSettings>
  fullName: Spectre.Console.Cli.ICommandLimiter<TSettings>
  nameWithType.vb: ICommandLimiter(Of TSettings)
  fullName.vb: Spectre.Console.Cli.ICommandLimiter(Of TSettings)
  name.vb: ICommandLimiter(Of TSettings)
  spec.csharp:
  - uid: Spectre.Console.Cli.ICommandLimiter`1
    name: ICommandLimiter
    isExternal: true
  - name: <
  - name: TSettings
  - name: '>'
  spec.vb:
  - uid: Spectre.Console.Cli.ICommandLimiter`1
    name: ICommandLimiter
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: TSettings
  - name: )
- uid: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  commentId: M:Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  parent: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}
  definition: Spectre.Console.Cli.AsyncCommand`1.Validate(Spectre.Console.Cli.CommandContext,`0)
  href: JMC.Console.JMCParserCommand.Settings.html
  name: Validate(CommandContext, Settings)
  nameWithType: AsyncCommand<JMCParserCommand.Settings>.Validate(CommandContext, JMCParserCommand.Settings)
  fullName: Spectre.Console.Cli.AsyncCommand<JMC.Console.JMCParserCommand.Settings>.Validate(Spectre.Console.Cli.CommandContext, JMC.Console.JMCParserCommand.Settings)
  nameWithType.vb: AsyncCommand(Of JMCParserCommand.Settings).Validate(CommandContext, JMCParserCommand.Settings)
  fullName.vb: Spectre.Console.Cli.AsyncCommand(Of JMC.Console.JMCParserCommand.Settings).Validate(Spectre.Console.Cli.CommandContext, JMC.Console.JMCParserCommand.Settings)
  spec.csharp:
  - uid: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
    name: Validate
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: )
  spec.vb:
  - uid: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
    name: Validate
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: )
- uid: JMC.Console.JMCParserCommand.Validate*
  commentId: Overload:JMC.Console.JMCParserCommand.Validate
  href: JMC.Console.JMCParserCommand.html#JMC_Console_JMCParserCommand_Validate_Spectre_Console_Cli_CommandContext_JMC_Console_JMCParserCommand_Settings_
  name: Validate
  nameWithType: JMCParserCommand.Validate
  fullName: JMC.Console.JMCParserCommand.Validate
- uid: Spectre.Console.Cli.CommandContext
  commentId: T:Spectre.Console.Cli.CommandContext
  parent: Spectre.Console.Cli
  isExternal: true
  name: CommandContext
  nameWithType: CommandContext
  fullName: Spectre.Console.Cli.CommandContext
- uid: JMC.Console.JMCParserCommand.Settings
  commentId: T:JMC.Console.JMCParserCommand.Settings
  parent: JMC.Console
  href: JMC.Console.JMCParserCommand.html
  name: JMCParserCommand.Settings
  nameWithType: JMCParserCommand.Settings
  fullName: JMC.Console.JMCParserCommand.Settings
  spec.csharp:
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  spec.vb:
  - uid: JMC.Console.JMCParserCommand
    name: JMCParserCommand
    href: JMC.Console.JMCParserCommand.html
  - name: .
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
- uid: Spectre.Console.ValidationResult
  commentId: T:Spectre.Console.ValidationResult
  parent: Spectre.Console
  isExternal: true
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: Spectre.Console.ValidationResult
- uid: Spectre.Console.Cli.AsyncCommand`1.Validate(Spectre.Console.Cli.CommandContext,`0)
  commentId: M:Spectre.Console.Cli.AsyncCommand`1.Validate(Spectre.Console.Cli.CommandContext,`0)
  isExternal: true
  name: Validate(CommandContext, TSettings)
  nameWithType: AsyncCommand<TSettings>.Validate(CommandContext, TSettings)
  fullName: Spectre.Console.Cli.AsyncCommand<TSettings>.Validate(Spectre.Console.Cli.CommandContext, TSettings)
  nameWithType.vb: AsyncCommand(Of TSettings).Validate(CommandContext, TSettings)
  fullName.vb: Spectre.Console.Cli.AsyncCommand(Of TSettings).Validate(Spectre.Console.Cli.CommandContext, TSettings)
  spec.csharp:
  - uid: Spectre.Console.Cli.AsyncCommand`1.Validate(Spectre.Console.Cli.CommandContext,`0)
    name: Validate
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - name: TSettings
  - name: )
  spec.vb:
  - uid: Spectre.Console.Cli.AsyncCommand`1.Validate(Spectre.Console.Cli.CommandContext,`0)
    name: Validate
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - name: TSettings
  - name: )
- uid: Spectre.Console
  commentId: N:Spectre.Console
  isExternal: true
  name: Spectre.Console
  nameWithType: Spectre.Console
  fullName: Spectre.Console
  spec.csharp:
  - uid: Spectre
    name: Spectre
    isExternal: true
  - name: .
  - uid: Spectre.Console
    name: Console
    isExternal: true
  spec.vb:
  - uid: Spectre
    name: Spectre
    isExternal: true
  - name: .
  - uid: Spectre.Console
    name: Console
    isExternal: true
- uid: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  commentId: M:Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
  parent: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}
  definition: Spectre.Console.Cli.AsyncCommand`1.ExecuteAsync(Spectre.Console.Cli.CommandContext,`0)
  href: JMC.Console.JMCParserCommand.Settings.html
  name: ExecuteAsync(CommandContext, Settings)
  nameWithType: AsyncCommand<JMCParserCommand.Settings>.ExecuteAsync(CommandContext, JMCParserCommand.Settings)
  fullName: Spectre.Console.Cli.AsyncCommand<JMC.Console.JMCParserCommand.Settings>.ExecuteAsync(Spectre.Console.Cli.CommandContext, JMC.Console.JMCParserCommand.Settings)
  nameWithType.vb: AsyncCommand(Of JMCParserCommand.Settings).ExecuteAsync(CommandContext, JMCParserCommand.Settings)
  fullName.vb: Spectre.Console.Cli.AsyncCommand(Of JMC.Console.JMCParserCommand.Settings).ExecuteAsync(Spectre.Console.Cli.CommandContext, JMC.Console.JMCParserCommand.Settings)
  spec.csharp:
  - uid: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: )
  spec.vb:
  - uid: Spectre.Console.Cli.AsyncCommand{JMC.Console.JMCParserCommand.Settings}.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - uid: JMC.Console.JMCParserCommand.Settings
    name: Settings
    href: JMC.Console.JMCParserCommand.Settings.html
  - name: )
- uid: JMC.Console.JMCParserCommand.ExecuteAsync*
  commentId: Overload:JMC.Console.JMCParserCommand.ExecuteAsync
  href: JMC.Console.JMCParserCommand.html#JMC_Console_JMCParserCommand_ExecuteAsync_Spectre_Console_Cli_CommandContext_JMC_Console_JMCParserCommand_Settings_
  name: ExecuteAsync
  nameWithType: JMCParserCommand.ExecuteAsync
  fullName: JMC.Console.JMCParserCommand.ExecuteAsync
- uid: System.Threading.Tasks.Task{System.Int32}
  commentId: T:System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<int>
  nameWithType: Task<int>
  fullName: System.Threading.Tasks.Task<int>
  nameWithType.vb: Task(Of Integer)
  fullName.vb: System.Threading.Tasks.Task(Of Integer)
  name.vb: Task(Of Integer)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Spectre.Console.Cli.AsyncCommand`1.ExecuteAsync(Spectre.Console.Cli.CommandContext,`0)
  commentId: M:Spectre.Console.Cli.AsyncCommand`1.ExecuteAsync(Spectre.Console.Cli.CommandContext,`0)
  isExternal: true
  name: ExecuteAsync(CommandContext, TSettings)
  nameWithType: AsyncCommand<TSettings>.ExecuteAsync(CommandContext, TSettings)
  fullName: Spectre.Console.Cli.AsyncCommand<TSettings>.ExecuteAsync(Spectre.Console.Cli.CommandContext, TSettings)
  nameWithType.vb: AsyncCommand(Of TSettings).ExecuteAsync(CommandContext, TSettings)
  fullName.vb: Spectre.Console.Cli.AsyncCommand(Of TSettings).ExecuteAsync(Spectre.Console.Cli.CommandContext, TSettings)
  spec.csharp:
  - uid: Spectre.Console.Cli.AsyncCommand`1.ExecuteAsync(Spectre.Console.Cli.CommandContext,`0)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - name: TSettings
  - name: )
  spec.vb:
  - uid: Spectre.Console.Cli.AsyncCommand`1.ExecuteAsync(Spectre.Console.Cli.CommandContext,`0)
    name: ExecuteAsync
    isExternal: true
  - name: (
  - uid: Spectre.Console.Cli.CommandContext
    name: CommandContext
    isExternal: true
  - name: ','
  - name: " "
  - name: TSettings
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
