{
  "JMC.Console": "JMC.Console.yml",
  "JMC.Console.JMCParserCommand": "JMC.Console.JMCParserCommand.yml",
  "JMC.Console.JMCParserCommand.ExecuteAsync(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)": "JMC.Console.JMCParserCommand.yml",
  "JMC.Console.JMCParserCommand.Settings": "JMC.Console.JMCParserCommand.Settings.yml",
  "JMC.Console.JMCParserCommand.Settings.FilePath": "JMC.Console.JMCParserCommand.Settings.yml",
  "JMC.Console.JMCParserCommand.Validate(Spectre.Console.Cli.CommandContext,JMC.Console.JMCParserCommand.Settings)": "JMC.Console.JMCParserCommand.yml",
  "JMC.Parser": "JMC.Parser.yml",
  "JMC.Parser.Helper": "JMC.Parser.Helper.yml",
  "JMC.Parser.Helper.ExpressionHelper": "JMC.Parser.Helper.ExpressionHelper.yml",
  "JMC.Parser.Helper.ExpressionHelper.GetConsoleTree(JMC.Parser.JMCExpression)": "JMC.Parser.Helper.ExpressionHelper.yml",
  "JMC.Parser.Helper.ExpressionHelper.ToExpression(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.Helper.ExpressionHelper.yml",
  "JMC.Parser.JMCExpression": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCExpression.#ctor": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCExpression.Empty": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCExpression.HasValue": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCExpression.Position": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCExpression.SubExpressions": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCExpression.TokenType": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCExpression.Value": "JMC.Parser.JMCExpression.yml",
  "JMC.Parser.JMCFileDetail": "JMC.Parser.JMCFileDetail.yml",
  "JMC.Parser.JMCFileDetail.#ctor": "JMC.Parser.JMCFileDetail.yml",
  "JMC.Parser.JMCFileDetail.Reset": "JMC.Parser.JMCFileDetail.yml",
  "JMC.Parser.JMCFileDetail.Variables": "JMC.Parser.JMCFileDetail.yml",
  "JMC.Parser.JMCParser": "JMC.Parser.JMCParser.yml",
  "JMC.Parser.JMCParser.ParseResult": "JMC.Parser.JMCParser.ParseResult.yml",
  "JMC.Parser.JMCParser.ParseResult.#ctor(System.Collections.Generic.IEnumerable{sly.parser.ParseError},JMC.Parser.JMCExpression,JMC.Parser.JMCRuleInstance)": "JMC.Parser.JMCParser.ParseResult.yml",
  "JMC.Parser.JMCParser.ParseResult.Errors": "JMC.Parser.JMCParser.ParseResult.yml",
  "JMC.Parser.JMCParser.ParseResult.Instance": "JMC.Parser.JMCParser.ParseResult.yml",
  "JMC.Parser.JMCParser.ParseResult.IsError": "JMC.Parser.JMCParser.ParseResult.yml",
  "JMC.Parser.JMCParser.ParseResult.Root": "JMC.Parser.JMCParser.ParseResult.yml",
  "JMC.Parser.JMCParser.TryGenerateTokens(System.String,sly.lexer.TokenChannels{JMC.Parser.TokenType}@)": "JMC.Parser.JMCParser.yml",
  "JMC.Parser.JMCParser.TryParse(System.Collections.Generic.IList{sly.lexer.Token{JMC.Parser.TokenType}})": "JMC.Parser.JMCParser.yml",
  "JMC.Parser.JMCParser.TryParse(System.String)": "JMC.Parser.JMCParser.yml",
  "JMC.Parser.JMCRuleInstance": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.AL(JMC.Parser.JMCExpression,System.Collections.Generic.List{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.ALS(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Assign(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Block(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Bool(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Class(sly.lexer.Token{JMC.Parser.TokenType},JMC.Parser.JMCExpression,System.Collections.Generic.List{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.ColorString(sly.lexer.Token{JMC.Parser.TokenType},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.CommadBlock(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Command(JMC.Parser.JMCExpression,System.Collections.Generic.List{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.CommandArgument(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.CommandAssign(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.CommandKeyword(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.CommandValue(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.CommandValue(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.DefaultString(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{sly.lexer.Token{JMC.Parser.TokenType}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FileDetail": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FuncArg(JMC.Parser.JMCExpression,System.Collections.Generic.List{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FuncArgs(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FuncArgs(JMC.Parser.JMCExpression,sly.parser.parser.ValueOption{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FuncNamedArg(sly.lexer.Token{JMC.Parser.TokenType},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FuncNamedArgs(JMC.Parser.JMCExpression,System.Collections.Generic.List{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FuncParams(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FunctionCallStatement(JMC.Parser.JMCExpression,sly.parser.parser.ValueOption{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.FunctionStatement(JMC.Parser.JMCExpression,sly.parser.parser.ValueOption{JMC.Parser.JMCExpression},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Identifier(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.JsonList(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.JsonObject(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.JsonValue(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.LambdaFunction(sly.parser.parser.ValueOption{JMC.Parser.JMCExpression},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.LexemesPostProcess(System.Collections.Generic.List{sly.lexer.Token{JMC.Parser.TokenType}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Namespace(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.NormalString(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Number(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Operand(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.PosFR(sly.lexer.Token{JMC.Parser.TokenType},sly.parser.parser.ValueOption{JMC.Parser.JMCExpression},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.PosI(sly.parser.parser.ValueOption{JMC.Parser.JMCExpression},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Program(System.Collections.Generic.List{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Properties(JMC.Parser.JMCExpression,System.Collections.Generic.List{sly.parser.parser.Group{JMC.Parser.TokenType,JMC.Parser.JMCExpression}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Property(sly.lexer.Token{JMC.Parser.TokenType},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.QuotedProperties(sly.parser.parser.ValueOption{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Selector(sly.lexer.Token{JMC.Parser.TokenType},sly.parser.parser.ValueOption{JMC.Parser.JMCExpression})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Statement(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Unary(sly.lexer.Token{JMC.Parser.TokenType},JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Value(JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.ValueSign(sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Variable(sly.lexer.Token{JMC.Parser.TokenType},System.Collections.Generic.List{sly.lexer.Token{JMC.Parser.TokenType}})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Variable(sly.lexer.Token{JMC.Parser.TokenType},sly.lexer.Token{JMC.Parser.TokenType})": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.VariableStatement(JMC.Parser.JMCExpression,JMC.Parser.JMCExpression,JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Vec2(JMC.Parser.JMCExpression,JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.JMCRuleInstance.Vec3(JMC.Parser.JMCExpression,JMC.Parser.JMCExpression,JMC.Parser.JMCExpression)": "JMC.Parser.JMCRuleInstance.yml",
  "JMC.Parser.Position": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.#ctor(System.Int32,System.Int32)": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.Column": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.Empty": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.Equals(System.Object)": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.GetHashCode": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.HasValue": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.Line": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.ToString": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.op_Equality(JMC.Parser.Position,JMC.Parser.Position)": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.op_Implicit(JMC.Parser.Position)~OmniSharp.Extensions.LanguageServer.Protocol.Models.Position": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.op_Implicit(JMC.Parser.Position)~sly.lexer.LexerPosition": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.op_Implicit(OmniSharp.Extensions.LanguageServer.Protocol.Models.Position)~JMC.Parser.Position": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.op_Implicit(sly.lexer.LexerPosition)~JMC.Parser.Position": "JMC.Parser.Position.yml",
  "JMC.Parser.Position.op_Inequality(JMC.Parser.Position,JMC.Parser.Position)": "JMC.Parser.Position.yml",
  "JMC.Parser.Test": "JMC.Parser.Test.yml",
  "JMC.Parser.Test.StringIterporationTest": "JMC.Parser.Test.StringIterporationTest.yml",
  "JMC.Parser.Test.StringIterporationTest.Test": "JMC.Parser.Test.StringIterporationTest.yml",
  "JMC.Parser.TokenType": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.And": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Arrow": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Assign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.BlockEnd": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.BlockStart": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.BooleanAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.ClassKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Colon": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Comma": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.CommandKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Comment": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.CompareAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Decrement": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Deref": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Divide": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.DivideAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.DoKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.DollarSign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Dot": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Double": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.EOF": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.ElseKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.End": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.EndQuote": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Equal": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Escape": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.False": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.FunctionKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.GreaterThan": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.GreaterThanOrEqual": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Identifier": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.IfKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Imply": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.ImportKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Increment": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Int": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.LessThan": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.LessThanOrEqual": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.ListEnd": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.ListStart": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Minus": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.MinusAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Multiply": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.MultiplyAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Namespace": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.NewKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Not": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.NotEqual": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.NullColesleAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.NullKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Or": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.ParenEnd": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.ParenStart": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Plus": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.PlusAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Remainder": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.RemainderAssign": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.RunKeyword": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.SelectorAllEntities": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.SelectorAllPlayers": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.SelectorNearest": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.SelectorRandomPlayer": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.SelectorSelf": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.StartQuote": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.StringValue": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.True": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.Variable": "JMC.Parser.TokenType.yml",
  "JMC.Parser.TokenType.WhileKeyword": "JMC.Parser.TokenType.yml"
}